// Define a structure to represent a command with its operands
struct Command {
    std::string name;
    std::string operand1;
    std::string operand2;
};

// Create a vector to store all the commands and their operands
std::vector<Command> commands {
    {"ADC   ", "r", "r"},
    {"ADD   ", "r", "r"},
    {"ADIW  ", "w", "I"},
    {"SBC   ", "r", "r"},
    {"SBCI  ", "d", "M"},
    {"SUB   ", "r", "r"},
    {"SUBI  ", "d", "M"},
    {"AND   ", "r", "r"},
    {"ANDI  ", "d", "M"},
    {"OR    ", "r", "r"},
    {"ORI   ", "d", "M"},
    {"EOR   ", "r", "r"},
    {"COM   ", "r", ""},
    {"NEG   ", "r", ""},
    {"SER   ", "d", ""},
    {"MUL   ", "r", "r"},
    {"MULS  ", "d", "d"},
    {"MULSU ", "a", "a"},
    {"FMUL  ", "a", "a"},
    {"FMULS ", "a", "a"},
    {"FMULSU", "a", "a"},
    {"CP    ", "r", "r"},
    {"CPC   ", "r", "r"},
    {"CPI   ", "d", "M"},
    {"LSR   ", "r", ""},
    {"ROR   ", "r", ""},
    {"ASR   ", "r", ""},
    {"SWAP  ", "r", ""},
    {"BSET  ", "B", ""},
    {"BCLR  ", "B", ""},
    {"BST   ", "r", "B"},
    {"BLD   ", "r", "B"},
    {"MOV   ", "r", "r"},
    {"MOVW  ", "re", "re"},
    {"LDI   ", "d", "M"},
    {"LD    ", "rx", "e"},
    {"LDD   ", "r", "b"},
    {"LDS   ", "r", "sram"},
    {"ST    ", "e", "rx"},
    {"STD   ", "b", "r"},
    {"STS   ", "sram", "r"},
    {"IN    ", "r", "io"},
    // {"OUT   ", "io", "r"},
    // {"PUSH  ", "r", ""},
    // {"POP   ", "r", ""},
    {"LPM   ", "", ""},
    {"LPM   ", "rz", "z"},
    {"CPSE  ", "r", "r"},
    {"SBRC  ", "r", "B"},
    {"SBRS  ", "r", "B"},
    {"SBI   ", "iol", "B"},
    {"CBI   ", "iol", "B"},
    {"SBIC  ", "iol", "B"},
    {"SBIS  ", "iol", "B"},
    {"CALL  ", "Test_JMP", ""},
    {"CALL  ", "Test_RJMP", ""},
    {"CALL  ", "Test_IJMP", ""},
    {"CALL  ", "Test_CALL", ""},
    {"CALL  ", "Test_RCALL", ""},
    {"CALL  ", "Test_ICALL", ""},
    {"CALL  ", "Test_BRBC", ""},
    {"CALL  ", "Test_BRBS", ""},
    {"WDR   ", "",""},
    {"WDR   ", "",""},
    {"WDR   ", "",""}
}; // Don't forget semi-colons for declaing struct or any containers
