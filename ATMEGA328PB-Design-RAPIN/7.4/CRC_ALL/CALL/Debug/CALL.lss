
CALL.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000422  000004b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000422  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800104  00800104  000004ba  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004ba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  0000052c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cba  00000000  00000000  000005ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009d2  00000000  00000000  00001266  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000536  00000000  00000000  00001c38  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  00002170  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000644  00000000  00000000  00002330  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003c2  00000000  00000000  00002974  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00002d36  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e2 e2       	ldi	r30, 0x22	; 34
  c8:	f4 e0       	ldi	r31, 0x04	; 4
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a4 30       	cpi	r26, 0x04	; 4
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a4 e0       	ldi	r26, 0x04	; 4
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a6 30       	cpi	r26, 0x06	; 6
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 19 01 	call	0x232	; 0x232 <main>
  ea:	0c 94 0f 02 	jmp	0x41e	; 0x41e <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <_Z11crc16_ccitthj>:
        //regenerate a number between 0 and 2^16-1
        randomNumber = (uint16_t) rand();
        bitCount = 0;
    } else bitCount++;
    return returnValue;
  f2:	cf 93       	push	r28
  f4:	df 93       	push	r29
  f6:	00 d0       	rcall	.+0      	; 0xf8 <_Z11crc16_ccitthj+0x6>
  f8:	00 d0       	rcall	.+0      	; 0xfa <_Z11crc16_ccitthj+0x8>
  fa:	cd b7       	in	r28, 0x3d	; 61
  fc:	de b7       	in	r29, 0x3e	; 62
  fe:	8a 83       	std	Y+2, r24	; 0x02
 100:	7c 83       	std	Y+4, r23	; 0x04
 102:	6b 83       	std	Y+3, r22	; 0x03
 104:	8a 81       	ldd	r24, Y+2	; 0x02
 106:	88 2f       	mov	r24, r24
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	98 2f       	mov	r25, r24
 10c:	88 27       	eor	r24, r24
 10e:	9c 01       	movw	r18, r24
 110:	8b 81       	ldd	r24, Y+3	; 0x03
 112:	9c 81       	ldd	r25, Y+4	; 0x04
 114:	82 27       	eor	r24, r18
 116:	93 27       	eor	r25, r19
 118:	9c 83       	std	Y+4, r25	; 0x04
 11a:	8b 83       	std	Y+3, r24	; 0x03
 11c:	19 82       	std	Y+1, r1	; 0x01
 11e:	89 81       	ldd	r24, Y+1	; 0x01
 120:	88 30       	cpi	r24, 0x08	; 8
 122:	c8 f4       	brcc	.+50     	; 0x156 <_Z11crc16_ccitthj+0x64>
 124:	8b 81       	ldd	r24, Y+3	; 0x03
 126:	9c 81       	ldd	r25, Y+4	; 0x04
 128:	99 23       	and	r25, r25
 12a:	5c f4       	brge	.+22     	; 0x142 <_Z11crc16_ccitthj+0x50>
 12c:	8b 81       	ldd	r24, Y+3	; 0x03
 12e:	9c 81       	ldd	r25, Y+4	; 0x04
 130:	88 0f       	add	r24, r24
 132:	99 1f       	adc	r25, r25
 134:	21 e2       	ldi	r18, 0x21	; 33
 136:	82 27       	eor	r24, r18
 138:	20 e1       	ldi	r18, 0x10	; 16
 13a:	92 27       	eor	r25, r18
 13c:	9c 83       	std	Y+4, r25	; 0x04
 13e:	8b 83       	std	Y+3, r24	; 0x03
 140:	06 c0       	rjmp	.+12     	; 0x14e <_Z11crc16_ccitthj+0x5c>
 142:	8b 81       	ldd	r24, Y+3	; 0x03
 144:	9c 81       	ldd	r25, Y+4	; 0x04
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	9c 83       	std	Y+4, r25	; 0x04
 14c:	8b 83       	std	Y+3, r24	; 0x03
 14e:	89 81       	ldd	r24, Y+1	; 0x01
 150:	8f 5f       	subi	r24, 0xFF	; 255
 152:	89 83       	std	Y+1, r24	; 0x01
 154:	e4 cf       	rjmp	.-56     	; 0x11e <_Z11crc16_ccitthj+0x2c>
 156:	8b 81       	ldd	r24, Y+3	; 0x03
 158:	9c 81       	ldd	r25, Y+4	; 0x04
 15a:	0f 90       	pop	r0
 15c:	0f 90       	pop	r0
 15e:	0f 90       	pop	r0
 160:	0f 90       	pop	r0
 162:	df 91       	pop	r29
 164:	cf 91       	pop	r28
 166:	08 95       	ret

00000168 <_Z8test_jmpi>:
 168:	cf 93       	push	r28
 16a:	df 93       	push	r29
 16c:	00 d0       	rcall	.+0      	; 0x16e <_Z8test_jmpi+0x6>
 16e:	cd b7       	in	r28, 0x3d	; 61
 170:	de b7       	in	r29, 0x3e	; 62
 172:	9a 83       	std	Y+2, r25	; 0x02
 174:	89 83       	std	Y+1, r24	; 0x01
 176:	89 81       	ldd	r24, Y+1	; 0x01
 178:	9a 81       	ldd	r25, Y+2	; 0x02
 17a:	18 16       	cp	r1, r24
 17c:	19 06       	cpc	r1, r25
 17e:	9c f4       	brge	.+38     	; 0x1a6 <L6_301+0xc>

00000180 <L1_301>:
 180:	0c 94 c7 00 	jmp	0x18e	; 0x18e <L4_301>

00000184 <L2_301>:
 184:	0c 94 c9 00 	jmp	0x192	; 0x192 <L5_301>

00000188 <L3_301>:
 188:	00 00       	nop
 18a:	0c 94 cd 00 	jmp	0x19a	; 0x19a <L6_301>

0000018e <L4_301>:
 18e:	0c 94 c2 00 	jmp	0x184	; 0x184 <L2_301>

00000192 <L5_301>:
 192:	0c 94 c4 00 	jmp	0x188	; 0x188 <L3_301>
 196:	00 00       	nop
	...

0000019a <L6_301>:
 19a:	89 81       	ldd	r24, Y+1	; 0x01
 19c:	9a 81       	ldd	r25, Y+2	; 0x02
 19e:	01 97       	sbiw	r24, 0x01	; 1
 1a0:	9a 83       	std	Y+2, r25	; 0x02
 1a2:	89 83       	std	Y+1, r24	; 0x01
 1a4:	e8 cf       	rjmp	.-48     	; 0x176 <_Z8test_jmpi+0xe>
 1a6:	00 00       	nop
 1a8:	0f 90       	pop	r0
 1aa:	0f 90       	pop	r0
 1ac:	df 91       	pop	r29
 1ae:	cf 91       	pop	r28
 1b0:	08 95       	ret

000001b2 <_Z12my_int_powerii>:
 1b2:	cf 93       	push	r28
 1b4:	df 93       	push	r29
 1b6:	00 d0       	rcall	.+0      	; 0x1b8 <_Z12my_int_powerii+0x6>
 1b8:	00 d0       	rcall	.+0      	; 0x1ba <_Z12my_int_powerii+0x8>
 1ba:	00 d0       	rcall	.+0      	; 0x1bc <_Z12my_int_powerii+0xa>
 1bc:	cd b7       	in	r28, 0x3d	; 61
 1be:	de b7       	in	r29, 0x3e	; 62
 1c0:	9c 83       	std	Y+4, r25	; 0x04
 1c2:	8b 83       	std	Y+3, r24	; 0x03
 1c4:	7e 83       	std	Y+6, r23	; 0x06
 1c6:	6d 83       	std	Y+5, r22	; 0x05
 1c8:	8b 81       	ldd	r24, Y+3	; 0x03
 1ca:	9c 81       	ldd	r25, Y+4	; 0x04
 1cc:	2d 81       	ldd	r18, Y+5	; 0x05
 1ce:	3e 81       	ldd	r19, Y+6	; 0x06
 1d0:	ac 01       	movw	r20, r24
 1d2:	84 2f       	mov	r24, r20
 1d4:	95 2f       	mov	r25, r21
 1d6:	62 2f       	mov	r22, r18
 1d8:	03 d0       	rcall	.+6      	; 0x1e0 <myPow495>
 1da:	88 2f       	mov	r24, r24
 1dc:	99 2f       	mov	r25, r25
 1de:	1b c0       	rjmp	.+54     	; 0x216 <over495>

000001e0 <myPow495>:
 1e0:	00 00       	nop
 1e2:	4f 93       	push	r20
 1e4:	5f 93       	push	r21
 1e6:	2f 93       	push	r18
 1e8:	48 2f       	mov	r20, r24
 1ea:	59 2f       	mov	r21, r25
 1ec:	26 2f       	mov	r18, r22
 1ee:	20 30       	cpi	r18, 0x00	; 0
 1f0:	61 f0       	breq	.+24     	; 0x20a <then495>
 1f2:	62 2f       	mov	r22, r18
 1f4:	6a 95       	dec	r22
 1f6:	f4 df       	rcall	.-24     	; 0x1e0 <myPow495>
 1f8:	48 9f       	mul	r20, r24
 1fa:	80 01       	movw	r16, r0
 1fc:	49 9f       	mul	r20, r25
 1fe:	10 0d       	add	r17, r0
 200:	58 9f       	mul	r21, r24
 202:	10 0d       	add	r17, r0
 204:	11 24       	eor	r1, r1
 206:	c8 01       	movw	r24, r16
 208:	02 c0       	rjmp	.+4      	; 0x20e <past495>

0000020a <then495>:
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	90 e0       	ldi	r25, 0x00	; 0

0000020e <past495>:
 20e:	2f 91       	pop	r18
 210:	5f 91       	pop	r21
 212:	6f 91       	pop	r22
 214:	08 95       	ret

00000216 <over495>:
 216:	00 00       	nop
 218:	9a 83       	std	Y+2, r25	; 0x02
 21a:	89 83       	std	Y+1, r24	; 0x01
 21c:	89 81       	ldd	r24, Y+1	; 0x01
 21e:	9a 81       	ldd	r25, Y+2	; 0x02
 220:	26 96       	adiw	r28, 0x06	; 6
 222:	0f b6       	in	r0, 0x3f	; 63
 224:	f8 94       	cli
 226:	de bf       	out	0x3e, r29	; 62
 228:	0f be       	out	0x3f, r0	; 63
 22a:	cd bf       	out	0x3d, r28	; 61
 22c:	df 91       	pop	r29
 22e:	cf 91       	pop	r28
 230:	08 95       	ret

00000232 <main>:
#include <stdlib.h>

volatile uint16_t crc = 0x00;
const int seed = 0x1CA8;

int main() {
 232:	0f 93       	push	r16
 234:	1f 93       	push	r17
 236:	cf 93       	push	r28
 238:	df 93       	push	r29
 23a:	00 d0       	rcall	.+0      	; 0x23c <main+0xa>
 23c:	00 d0       	rcall	.+0      	; 0x23e <main+0xc>
 23e:	00 d0       	rcall	.+0      	; 0x240 <main+0xe>
 240:	cd b7       	in	r28, 0x3d	; 61
 242:	de b7       	in	r29, 0x3e	; 62
	srand(seed);
 244:	88 ea       	ldi	r24, 0xA8	; 168
 246:	9c e1       	ldi	r25, 0x1C	; 28
 248:	0e 94 a1 01 	call	0x342	; 0x342 <srand>
	uint16_t Rd = 0;
 24c:	1a 82       	std	Y+2, r1	; 0x02
 24e:	19 82       	std	Y+1, r1	; 0x01
	uint16_t i = 0;
 250:	1c 82       	std	Y+4, r1	; 0x04
 252:	1b 82       	std	Y+3, r1	; 0x03
	int k = 3;
 254:	83 e0       	ldi	r24, 0x03	; 3
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	9e 83       	std	Y+6, r25	; 0x06
 25a:	8d 83       	std	Y+5, r24	; 0x05
	
/*	test_rcall(30);*/
	
// 	test_icall(15);
	
	test_jmp(30);
 25c:	8e e1       	ldi	r24, 0x1E	; 30
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	0e 94 b4 00 	call	0x168	; 0x168 <_Z8test_jmpi>
// 		for(int j = 1 ; j < 10 ; j++){
// 			crc = crc16_ccitt((uint8_t)my_int_power(i*21 , j) , crc);
// 		}
// 	}
// 	crc = crc16_ccitt((uint8_t)my_int_power(9 , 7) , crc);
	crc = crc16_ccitt((uint8_t)my_int_power(121 , 3) , crc);
 264:	00 91 04 01 	lds	r16, 0x0104	; 0x800104 <__data_end>
 268:	10 91 05 01 	lds	r17, 0x0105	; 0x800105 <__data_end+0x1>
 26c:	63 e0       	ldi	r22, 0x03	; 3
 26e:	70 e0       	ldi	r23, 0x00	; 0
 270:	89 e7       	ldi	r24, 0x79	; 121
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <_Z12my_int_powerii>
 278:	b8 01       	movw	r22, r16
 27a:	0e 94 79 00 	call	0xf2	; 0xf2 <_Z11crc16_ccitthj>
 27e:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 282:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
		asm volatile ("adiw %0, 62 ": "=w"(Rd): );
		asm volatile ("adiw %0, 63 ": "=w"(Rd): ); crc = crc16_ccitt(Rd, crc);
		i++;
		if (i>0xFF00) break;
	}*/
}
 286:	80 e0       	ldi	r24, 0x00	; 0
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	26 96       	adiw	r28, 0x06	; 6
 28c:	0f b6       	in	r0, 0x3f	; 63
 28e:	f8 94       	cli
 290:	de bf       	out	0x3e, r29	; 62
 292:	0f be       	out	0x3f, r0	; 63
 294:	cd bf       	out	0x3d, r28	; 61
 296:	df 91       	pop	r29
 298:	cf 91       	pop	r28
 29a:	1f 91       	pop	r17
 29c:	0f 91       	pop	r16
 29e:	08 95       	ret

000002a0 <do_rand>:
 2a0:	8f 92       	push	r8
 2a2:	9f 92       	push	r9
 2a4:	af 92       	push	r10
 2a6:	bf 92       	push	r11
 2a8:	cf 92       	push	r12
 2aa:	df 92       	push	r13
 2ac:	ef 92       	push	r14
 2ae:	ff 92       	push	r15
 2b0:	cf 93       	push	r28
 2b2:	df 93       	push	r29
 2b4:	ec 01       	movw	r28, r24
 2b6:	68 81       	ld	r22, Y
 2b8:	79 81       	ldd	r23, Y+1	; 0x01
 2ba:	8a 81       	ldd	r24, Y+2	; 0x02
 2bc:	9b 81       	ldd	r25, Y+3	; 0x03
 2be:	61 15       	cp	r22, r1
 2c0:	71 05       	cpc	r23, r1
 2c2:	81 05       	cpc	r24, r1
 2c4:	91 05       	cpc	r25, r1
 2c6:	21 f4       	brne	.+8      	; 0x2d0 <do_rand+0x30>
 2c8:	64 e2       	ldi	r22, 0x24	; 36
 2ca:	79 ed       	ldi	r23, 0xD9	; 217
 2cc:	8b e5       	ldi	r24, 0x5B	; 91
 2ce:	97 e0       	ldi	r25, 0x07	; 7
 2d0:	2d e1       	ldi	r18, 0x1D	; 29
 2d2:	33 ef       	ldi	r19, 0xF3	; 243
 2d4:	41 e0       	ldi	r20, 0x01	; 1
 2d6:	50 e0       	ldi	r21, 0x00	; 0
 2d8:	0e 94 ac 01 	call	0x358	; 0x358 <__divmodsi4>
 2dc:	49 01       	movw	r8, r18
 2de:	5a 01       	movw	r10, r20
 2e0:	9b 01       	movw	r18, r22
 2e2:	ac 01       	movw	r20, r24
 2e4:	a7 ea       	ldi	r26, 0xA7	; 167
 2e6:	b1 e4       	ldi	r27, 0x41	; 65
 2e8:	0e 94 cb 01 	call	0x396	; 0x396 <__muluhisi3>
 2ec:	6b 01       	movw	r12, r22
 2ee:	7c 01       	movw	r14, r24
 2f0:	ac ee       	ldi	r26, 0xEC	; 236
 2f2:	b4 ef       	ldi	r27, 0xF4	; 244
 2f4:	a5 01       	movw	r20, r10
 2f6:	94 01       	movw	r18, r8
 2f8:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <__mulohisi3>
 2fc:	dc 01       	movw	r26, r24
 2fe:	cb 01       	movw	r24, r22
 300:	8c 0d       	add	r24, r12
 302:	9d 1d       	adc	r25, r13
 304:	ae 1d       	adc	r26, r14
 306:	bf 1d       	adc	r27, r15
 308:	b7 ff       	sbrs	r27, 7
 30a:	03 c0       	rjmp	.+6      	; 0x312 <do_rand+0x72>
 30c:	01 97       	sbiw	r24, 0x01	; 1
 30e:	a1 09       	sbc	r26, r1
 310:	b0 48       	sbci	r27, 0x80	; 128
 312:	88 83       	st	Y, r24
 314:	99 83       	std	Y+1, r25	; 0x01
 316:	aa 83       	std	Y+2, r26	; 0x02
 318:	bb 83       	std	Y+3, r27	; 0x03
 31a:	9f 77       	andi	r25, 0x7F	; 127
 31c:	df 91       	pop	r29
 31e:	cf 91       	pop	r28
 320:	ff 90       	pop	r15
 322:	ef 90       	pop	r14
 324:	df 90       	pop	r13
 326:	cf 90       	pop	r12
 328:	bf 90       	pop	r11
 32a:	af 90       	pop	r10
 32c:	9f 90       	pop	r9
 32e:	8f 90       	pop	r8
 330:	08 95       	ret

00000332 <rand_r>:
 332:	0e 94 50 01 	call	0x2a0	; 0x2a0 <do_rand>
 336:	08 95       	ret

00000338 <rand>:
 338:	80 e0       	ldi	r24, 0x00	; 0
 33a:	91 e0       	ldi	r25, 0x01	; 1
 33c:	0e 94 50 01 	call	0x2a0	; 0x2a0 <do_rand>
 340:	08 95       	ret

00000342 <srand>:
 342:	a0 e0       	ldi	r26, 0x00	; 0
 344:	b0 e0       	ldi	r27, 0x00	; 0
 346:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 34a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 34e:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 352:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 356:	08 95       	ret

00000358 <__divmodsi4>:
 358:	05 2e       	mov	r0, r21
 35a:	97 fb       	bst	r25, 7
 35c:	1e f4       	brtc	.+6      	; 0x364 <__divmodsi4+0xc>
 35e:	00 94       	com	r0
 360:	0e 94 c3 01 	call	0x386	; 0x386 <__negsi2>
 364:	57 fd       	sbrc	r21, 7
 366:	07 d0       	rcall	.+14     	; 0x376 <__divmodsi4_neg2>
 368:	0e 94 de 01 	call	0x3bc	; 0x3bc <__udivmodsi4>
 36c:	07 fc       	sbrc	r0, 7
 36e:	03 d0       	rcall	.+6      	; 0x376 <__divmodsi4_neg2>
 370:	4e f4       	brtc	.+18     	; 0x384 <__divmodsi4_exit>
 372:	0c 94 c3 01 	jmp	0x386	; 0x386 <__negsi2>

00000376 <__divmodsi4_neg2>:
 376:	50 95       	com	r21
 378:	40 95       	com	r20
 37a:	30 95       	com	r19
 37c:	21 95       	neg	r18
 37e:	3f 4f       	sbci	r19, 0xFF	; 255
 380:	4f 4f       	sbci	r20, 0xFF	; 255
 382:	5f 4f       	sbci	r21, 0xFF	; 255

00000384 <__divmodsi4_exit>:
 384:	08 95       	ret

00000386 <__negsi2>:
 386:	90 95       	com	r25
 388:	80 95       	com	r24
 38a:	70 95       	com	r23
 38c:	61 95       	neg	r22
 38e:	7f 4f       	sbci	r23, 0xFF	; 255
 390:	8f 4f       	sbci	r24, 0xFF	; 255
 392:	9f 4f       	sbci	r25, 0xFF	; 255
 394:	08 95       	ret

00000396 <__muluhisi3>:
 396:	0e 94 00 02 	call	0x400	; 0x400 <__umulhisi3>
 39a:	a5 9f       	mul	r26, r21
 39c:	90 0d       	add	r25, r0
 39e:	b4 9f       	mul	r27, r20
 3a0:	90 0d       	add	r25, r0
 3a2:	a4 9f       	mul	r26, r20
 3a4:	80 0d       	add	r24, r0
 3a6:	91 1d       	adc	r25, r1
 3a8:	11 24       	eor	r1, r1
 3aa:	08 95       	ret

000003ac <__mulshisi3>:
 3ac:	b7 ff       	sbrs	r27, 7
 3ae:	0c 94 cb 01 	jmp	0x396	; 0x396 <__muluhisi3>

000003b2 <__mulohisi3>:
 3b2:	0e 94 cb 01 	call	0x396	; 0x396 <__muluhisi3>
 3b6:	82 1b       	sub	r24, r18
 3b8:	93 0b       	sbc	r25, r19
 3ba:	08 95       	ret

000003bc <__udivmodsi4>:
 3bc:	a1 e2       	ldi	r26, 0x21	; 33
 3be:	1a 2e       	mov	r1, r26
 3c0:	aa 1b       	sub	r26, r26
 3c2:	bb 1b       	sub	r27, r27
 3c4:	fd 01       	movw	r30, r26
 3c6:	0d c0       	rjmp	.+26     	; 0x3e2 <__udivmodsi4_ep>

000003c8 <__udivmodsi4_loop>:
 3c8:	aa 1f       	adc	r26, r26
 3ca:	bb 1f       	adc	r27, r27
 3cc:	ee 1f       	adc	r30, r30
 3ce:	ff 1f       	adc	r31, r31
 3d0:	a2 17       	cp	r26, r18
 3d2:	b3 07       	cpc	r27, r19
 3d4:	e4 07       	cpc	r30, r20
 3d6:	f5 07       	cpc	r31, r21
 3d8:	20 f0       	brcs	.+8      	; 0x3e2 <__udivmodsi4_ep>
 3da:	a2 1b       	sub	r26, r18
 3dc:	b3 0b       	sbc	r27, r19
 3de:	e4 0b       	sbc	r30, r20
 3e0:	f5 0b       	sbc	r31, r21

000003e2 <__udivmodsi4_ep>:
 3e2:	66 1f       	adc	r22, r22
 3e4:	77 1f       	adc	r23, r23
 3e6:	88 1f       	adc	r24, r24
 3e8:	99 1f       	adc	r25, r25
 3ea:	1a 94       	dec	r1
 3ec:	69 f7       	brne	.-38     	; 0x3c8 <__udivmodsi4_loop>
 3ee:	60 95       	com	r22
 3f0:	70 95       	com	r23
 3f2:	80 95       	com	r24
 3f4:	90 95       	com	r25
 3f6:	9b 01       	movw	r18, r22
 3f8:	ac 01       	movw	r20, r24
 3fa:	bd 01       	movw	r22, r26
 3fc:	cf 01       	movw	r24, r30
 3fe:	08 95       	ret

00000400 <__umulhisi3>:
 400:	a2 9f       	mul	r26, r18
 402:	b0 01       	movw	r22, r0
 404:	b3 9f       	mul	r27, r19
 406:	c0 01       	movw	r24, r0
 408:	a3 9f       	mul	r26, r19
 40a:	70 0d       	add	r23, r0
 40c:	81 1d       	adc	r24, r1
 40e:	11 24       	eor	r1, r1
 410:	91 1d       	adc	r25, r1
 412:	b2 9f       	mul	r27, r18
 414:	70 0d       	add	r23, r0
 416:	81 1d       	adc	r24, r1
 418:	11 24       	eor	r1, r1
 41a:	91 1d       	adc	r25, r1
 41c:	08 95       	ret

0000041e <_exit>:
 41e:	f8 94       	cli

00000420 <__stop_program>:
 420:	ff cf       	rjmp	.-2      	; 0x420 <__stop_program>
